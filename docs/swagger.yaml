basePath: /api/v1
host: localhost:8080
info:
  contact: {}
  description: Microservice Boilerplate API for user and product management
  title: Go Microservice Boilerplate API
  version: "1.0"
paths:
  /health:
    get:
      description: Check the health status of the gateway service
      produces:
      - application/json
      responses: {}
      summary: Health Check
      tags:
      - Health
  /products:
    get:
      description: Get paginated list of products
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      - description: Category filter
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses: {}
      summary: List Products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Create a new product
      produces:
      - application/json
      responses: {}
      summary: Create Product
      tags:
      - Products
  /products/{id}:
    delete:
      description: Delete product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete Product
      tags:
      - Products
    get:
      description: Get product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get Product
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update product information
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Update Product
      tags:
      - Products
  /users:
    get:
      description: Get paginated list of users
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses: {}
      summary: List Users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user account
      produces:
      - application/json
      responses: {}
      summary: Create User
      tags:
      - Users
  /users/{id}:
    delete:
      description: Delete user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete User
      tags:
      - Users
    get:
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get User
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Update User
      tags:
      - Users
swagger: "2.0"
